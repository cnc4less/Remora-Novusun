new:173:33:void* operator new(std::size_t, void*)	16	static
stl_vector.h:285:7:std::_Vector_base<_Tp, _Alloc>::_Vector_base() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:484:7:std::vector<_Tp, _Alloc>::vector() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
pruThread.cpp:10:1:pruThread::pruThread(TIM_TypeDef*, IRQn_Type, uint32_t)	24	static
pruThread.cpp:18:6:void pruThread::startThread()	32	static
pruThread.cpp:23:6:void pruThread::stopThread()	16	static
pruThread.cpp:29:6:void pruThread::registerModule(Module*)	16	static
pruThread.cpp:35:6:void pruThread::registerModulePost(Module*)	16	static
pruThread.cpp:42:6:void pruThread::run()	32	static
stl_vector.h:128:2:std::_Vector_base<_Tp, _Alloc>::_Vector_impl::_Vector_impl() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_iterator.h:802:26:constexpr __gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator() [with _Iterator = Module**; _Container = std::vector<Module*>]	16	static
stl_vector.h:1184:7:void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:808:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::begin() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	24	static
stl_vector.h:826:7:std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::end() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	24	static
stl_iterator.h:907:5:bool __gnu_cxx::operator!=(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = Module**; _Container = std::vector<Module*>]	24	static
stl_iterator.h:827:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>& __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator++() [with _Iterator = Module**; _Container = std::vector<Module*>]	16	static
stl_iterator.h:819:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::reference __gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*() const [with _Iterator = Module**; _Container = std::vector<Module*>]	16	static
allocator.h:138:7:std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = Module*]	16	static
stl_vector.h:94:2:std::_Vector_base<_Tp, _Alloc>::_Vector_impl_data::_Vector_impl_data() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:347:7:void std::_Vector_base<_Tp, _Alloc>::_M_deallocate(std::_Vector_base<_Tp, _Alloc>::pointer, std::size_t) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	24	static
stl_vector.h:273:7:std::_Vector_base<_Tp, _Alloc>::_Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_construct.h:203:5:void std::_Destroy(_ForwardIterator, _ForwardIterator, std::allocator<_T2>&) [with _ForwardIterator = Module**; _Tp = Module*]	24	static
alloc_traits.h:482:2:) [with _Up = Module*; _Args = {Module* const&}; _Tp = Module*]	24	static
stl_vector.h:441:7:static constexpr bool std::vector<_Tp, _Alloc>::_S_use_relocate() [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:428:7:static constexpr bool std::vector<_Tp, _Alloc>::_S_nothrow_relocate(std::true_type) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
vector.tcc:426:7:) [with _Args = {Module* const&}; _Tp = Module*; _Alloc = std::allocator<Module*>]	64	static
stl_iterator.h:806:7:__gnu_cxx::__normal_iterator<_Iterator, _Container>::__normal_iterator(const _Iterator&) [with _Iterator = Module**; _Container = std::vector<Module*>]	16	static
stl_iterator.h:871:7:const _Iterator& __gnu_cxx::__normal_iterator<_Iterator, _Container>::base() const [with _Iterator = Module**; _Container = std::vector<Module*>]	16	static
new_allocator.h:80:7:__gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = Module*]	16	static
alloc_traits.h:469:7:static void std::allocator_traits<std::allocator<_Tp1> >::deallocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::pointer, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = Module*]	24	static
stl_construct.h:127:5:void std::_Destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = Module**]	16	static
move.h:74:5:constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = Module* const&]	16	static
new_allocator.h:144:2:) [with _Up = Module*; _Args = {Module* const&}; _Tp = Module*]	32	static
stl_vector.h:1753:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_M_check_len(std::vector<_Tp, _Alloc>::size_type, const char*) const [with _Tp = Module*; _Alloc = std::allocator<Module*>]	40	static
stl_iterator.h:989:5:typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&) [with _Iterator = Module**; _Container = std::vector<Module*>]	24	static
stl_vector.h:340:7:std::_Vector_base<_Tp, _Alloc>::pointer std::_Vector_base<_Tp, _Alloc>::_M_allocate(std::size_t) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:462:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	48	static
stl_uninitialized.h:323:5:_ForwardIterator std::__uninitialized_move_if_noexcept_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Module**; _ForwardIterator = Module**; _Allocator = std::allocator<Module*>]	32	static
new_allocator.h:119:7:void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = Module*]	24	static
stl_construct.h:117:9:static void std::_Destroy_aux<true>::__destroy(_ForwardIterator, _ForwardIterator) [with _ForwardIterator = Module**]	16	static
stl_vector.h:920:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::max_size() const [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_vector.h:915:7:std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::size() const [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = unsigned int]	16	static
alloc_traits.h:443:7:static _Tp* std::allocator_traits<std::allocator<_Tp1> >::allocate(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, std::allocator_traits<std::allocator<_Tp1> >::size_type) [with _Tp = Module*]	16	static
stl_vector.h:450:7:static std::vector<_Tp, _Alloc>::pointer std::vector<_Tp, _Alloc>::_S_do_relocate(std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::pointer, std::vector<_Tp, _Alloc>::_Tp_alloc_type&, std::true_type) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	24	static
stl_iterator.h:1242:5:_ReturnType std::__make_move_if_noexcept_iterator(_Tp*) [with _Tp = Module*; _ReturnType = std::move_iterator<Module**>]	24	static
stl_uninitialized.h:305:5:_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, std::allocator<_Tp>&) [with _InputIterator = std::move_iterator<Module**>; _ForwardIterator = Module**; _Tp = Module*]	24	static
stl_vector.h:1773:7:static std::vector<_Tp, _Alloc>::size_type std::vector<_Tp, _Alloc>::_S_max_size(const _Tp_alloc_type&) [with _Tp = Module*; _Alloc = std::allocator<Module*>]	24	static
stl_vector.h:277:7:const _Tp_alloc_type& std::_Vector_base<_Tp, _Alloc>::_M_get_Tp_allocator() const [with _Tp = Module*; _Alloc = std::allocator<Module*>]	16	static
new_allocator.h:102:7:_Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = Module*]	24	static
stl_uninitialized.h:958:5:_ForwardIterator std::__relocate_a(_InputIterator, _InputIterator, _ForwardIterator, _Allocator&) [with _InputIterator = Module**; _ForwardIterator = Module**; _Allocator = std::allocator<Module*>]	32	static
stl_iterator.h:1057:7:std::move_iterator<_Iterator>::move_iterator(std::move_iterator<_Iterator>::iterator_type) [with _Iterator = Module**]	16	static
stl_uninitialized.h:115:5:_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Module**>; _ForwardIterator = Module**]	32	static
alloc_traits.h:505:7:static std::allocator_traits<std::allocator<_Tp1> >::size_type std::allocator_traits<std::allocator<_Tp1> >::max_size(const allocator_type&) [with _Tp = Module*]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = unsigned int]	16	static
new_allocator.h:132:7:__gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = Module*]	16	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = Module**]	16	static
stl_uninitialized.h:924:5:std::__enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*> std::__relocate_a_1(_Tp*, _Tp*, _Tp*, std::allocator<_T2>&) [with _Tp = Module*; _Up = Module*]	32	static
stl_uninitialized.h:99:9:static _ForwardIterator std::__uninitialized_copy<true>::__uninit_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = std::move_iterator<Module**>; _ForwardIterator = Module**]	24	static
stl_algobase.h:465:5:_OI std::copy(_II, _II, _OI) [with _II = std::move_iterator<Module**>; _OI = Module**]	32	static
stl_iterator.h:1262:5:base())) std::__miter_base(std::move_iterator<_IteratorL>) [with _Iterator = Module**]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = Module**; _OI = Module**]	32	static
stl_iterator.h:1066:7:std::move_iterator<_Iterator>::iterator_type std::move_iterator<_Iterator>::base() const [with _Iterator = Module**]	16	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = Module**]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = true; _II = Module**; _OI = Module**]	32	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = Module**]	16	static
stl_algobase.h:375:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = Module*; bool _IsMove = true]	32	static
